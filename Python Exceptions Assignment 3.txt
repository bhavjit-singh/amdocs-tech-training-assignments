# Problem Statement
# You are asked to design a Flight Management System in Python using exception handling.

# The system should:
# - Read flight information from a file called flights.txt.
# - Each line has: flight_number available_seats price_per_ticket
#   Example: AI101 50 6000

# Ask the user for:
# - Flight number
# - Number of tickets to book

# Implement the following exception rules (Questions):

# (a) Raise FlightNotFoundError (custom) if the entered flight number does not exist.

# (b) Raise SeatsUnavailableError (custom) if requested tickets exceed available seats.

# (c) Handle ValueError if user enters invalid input (like string instead of integer).

# (d) Handle ZeroDivisionError if user enters 0 tickets (while calculating discount per ticket).

# (e) Always close the file using finally.

# The program should print:
# - Flight details
# - Total booking cost
# - Discount per ticket (total / tickets)

# Note**:
# Use nested try-except:

# Inner block for booking operations.


# Solution :=


class FlightNotFoundError(Exception):
    pass


class SeatsUnavailableError(Exception):
    pass


def read_flights(filename):
    flights = {}
    try:
        f = open(filename, "r")
        for line in f:
            parts = line.strip().split()
            if len(parts) == 3:
                flight_number, seats, price = parts
                flights[flight_number] = {
                    "available_seats": int(seats),
                    "price_per_ticket": int(price),
                }
    finally:
        f.close()
    return flights


def book_tickets(flights):
    try:
        flight_number = input("Enter flight number: ").strip()
        if flight_number not in flights:
            raise FlightNotFoundError("Flight not found!")

        try:
            tickets = int(input("Enter number of tickets: "))

            if tickets <= 0:
                raise ZeroDivisionError("Tickets cannot be zero!")

            flight = flights[flight_number]
            if tickets > flight["available_seats"]:
                raise SeatsUnavailableError("Not enough seats available!")

            total_cost = tickets * flight["price_per_ticket"]

            try:
                discount_per_ticket = total_cost / tickets
            except ZeroDivisionError as e:
                print("Error:", e)
                discount_per_ticket = 0

            print("\n--- Booking Details ---")
            print(f"Flight Number: {flight_number}")
            print(f"Price per Ticket: {flight['price_per_ticket']}")
            print(f"Tickets Booked: {tickets}")
            print(f"Total Booking Cost: {total_cost}")
            print(f"Discount per Ticket: {discount_per_ticket}")

        except ValueError:
            print("Invalid input! Please enter numbers only.")
        except SeatsUnavailableError as e:
            print("Error:", e)

    except FlightNotFoundError as e:
        print("Error:", e)


flights = read_flights("flights.txt")
book_tickets(flights)
