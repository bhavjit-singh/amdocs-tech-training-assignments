ddl dml

(a)
SELECT 
    p.product_id,
    p.product_name,
    c.category_name,
    s.supplier_name,
    p.price,
    p.stock_quantity
FROM products p
JOIN categories c ON p.category_id = c.category_id
JOIN suppliers s ON p.supplier_id = s.supplier_id;


(b)
SELECT 
    product_id,
    product_name,
    stock_quantity
FROM products
WHERE stock_quantity < 5;


(c)
ALTER TABLE products
ADD COLUMN discount_percent DECIMAL(5,2) NOT NULL DEFAULT 0;


(d)
UPDATE products p
JOIN categories c ON p.category_id = c.category_id
SET p.price = p.price * 0.85
WHERE c.category_name = 'Electronics';


(e)
SELECT COUNT(*) AS total_products
FROM products;


(f)
SELECT AVG(price) AS average_price
FROM products;


(g)
SELECT 
    MAX(p.price) AS max_price,
    MIN(p.price) AS min_price
FROM products p
JOIN categories c ON p.category_id = c.category_id
WHERE c.category_name = 'Electronics';


(h)
SELECT 
    c.category_name,
    COUNT(p.product_id) AS product_count
FROM categories c
LEFT JOIN products p ON c.category_id = p.category_id
GROUP BY c.category_id, c.category_name;


(i)
SELECT DISTINCT s.supplier_name
FROM suppliers s
JOIN products p ON s.supplier_id = p.supplier_id
WHERE p.price BETWEEN 50 AND 200;


(j)
SELECT product_id, product_name, category_id
FROM products
WHERE category_id IN (1, 3);


(k)
SELECT 
    c.category_name,
    SUM(p.stock_quantity) AS total_stock
FROM categories c
JOIN products p ON c.category_id = p.category_id
GROUP BY c.category_id, c.category_name
HAVING COUNT(p.product_id) > 1;


(l)
SELECT 
    s.supplier_name,
    AVG(p.price) AS avg_price
FROM suppliers s
JOIN products p ON s.supplier_id = p.supplier_id
GROUP BY s.supplier_id, s.supplier_name
HAVING AVG(p.price) > 100;


(m)
SELECT product_id, product_name, price
FROM products
ORDER BY price DESC;


(n)
SELECT 
    c.category_name,
    SUM(p.price * p.stock_quantity) AS total_stock_value
FROM categories c
JOIN products p ON c.category_id = p.category_id
GROUP BY c.category_id, c.category_name
ORDER BY total_stock_value DESC;


JOIN Questions :==

(a)
SELECT p.product_id, p.product_name, c.category_name
FROM products p, categories c
WHERE p.category_id = c.category_id;


(b)
SELECT p.product_id, p.product_name, c.category_name
FROM products p
LEFT JOIN categories c ON p.category_id = c.category_id;


(c)
SELECT c.category_name, COUNT(p.product_id) AS product_count
FROM categories c
LEFT JOIN products p ON c.category_id = p.category_id
GROUP BY c.category_id, c.category_name;


(d)
SELECT p.product_id, p.product_name, s.supplier_name
FROM products p
LEFT JOIN suppliers s ON p.supplier_id = s.supplier_id;


(e)
SELECT s.supplier_name, p.product_name
FROM products p
RIGHT JOIN suppliers s ON p.supplier_id = s.supplier_id;


(f)
SELECT p.product_id, p.product_name
FROM products p
WHERE p.supplier_id IS NULL;


(g)
SELECT p.product_id, p.product_name, c.category_name, s.supplier_name
FROM products p, categories c, suppliers s
WHERE p.category_id = c.category_id
  AND p.supplier_id = s.supplier_id;


(h)
SELECT s.supplier_name, c.category_name
FROM suppliers s
LEFT JOIN products p ON s.supplier_id = p.supplier_id
LEFT JOIN categories c ON p.category_id = c.category_id
UNION
SELECT s.supplier_name, c.category_name
FROM suppliers s
RIGHT JOIN products p ON s.supplier_id = p.supplier_id
RIGHT JOIN categories c ON p.category_id = c.category_id;


(i)
SELECT p.product_id, p.product_name, s.contact_email
FROM products p, suppliers s
WHERE p.supplier_id = s.supplier_id
  AND s.contact_email IS NOT NULL;


(j)
SELECT DISTINCT c.category_name
FROM products p, categories c, suppliers s
WHERE p.category_id = c.category_id
  AND p.supplier_id = s.supplier_id
  AND s.supplier_name = 'Global Goods';